spring.application.name=School Management System - Testing

# Database Configuration for MySQL (Testing)
spring.datasource.url=jdbc:mysql://mysql:3306/school_management_system?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate Configuration (Testing)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# Server Configuration
server.port=8080
server.servlet.context-path=/
server.tomcat.connection-timeout=300000
server.tomcat.keep-alive-timeout=300000
server.tomcat.max-keep-alive-requests=100

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=15MB
file.upload.directory=./uploads

# JWT Configuration (Testing - Same as development)
jwt.secret=myVerySecretJWTKeyForSchoolManagementSystem2024DevelopmentOnly
jwt.expiration=86400000

# Logging Configuration (Testing - Verbose for debugging)
logging.level.com.devtech.school_management_system=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.test=DEBUG

# Jackson Configuration
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.serialization.write-dates-as-timestamps=false

# Validation Configuration
spring.jpa.properties.hibernate.validator.apply_to-ddl=false

# Connection Pool Configuration (Testing - Smaller pool)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000

# Hibernate Configuration
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Error Handling (Testing - Show all errors)
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=always

# CORS Configuration (Testing - Allow testing team access)
app.cors.allowed-origins=http://localhost:80,http://localhost:3000,http://localhost:8080,http://your-testing-server:80,http://your-testing-server:3000,http://your-testing-server:8080

# Actuator Configuration (Testing - Expose more endpoints)
management.endpoints.web.exposure.include=health,info,metrics,env,configprops,beans,mappings
management.endpoint.health.show-details=always
management.endpoint.env.show-values=always

# AI Provider Configuration (Testing)
# Uses environment variables for security

# OpenAI Configuration
ai.openai.api-key=${AI_OPENAI_API_KEY:YOUR_OPENAI_API_KEY_HERE}
ai.openai.model=${AI_OPENAI_MODEL:gpt-4o-mini}
ai.openai.max-tokens=${AI_OPENAI_MAX_TOKENS:4000}
ai.openai.temperature=${AI_OPENAI_TEMPERATURE:0.7}
ai.openai.timeout=${AI_OPENAI_TIMEOUT:30000}

# Anthropic Claude Configuration
ai.anthropic.api-key=${AI_ANTHROPIC_API_KEY:YOUR_ANTHROPIC_API_KEY_HERE}
ai.anthropic.model=${AI_ANTHROPIC_MODEL:claude-3-sonnet-20240229}
ai.anthropic.max-tokens=${AI_ANTHROPIC_MAX_TOKENS:4000}
ai.anthropic.temperature=${AI_ANTHROPIC_TEMPERATURE:0.7}
ai.anthropic.timeout=${AI_ANTHROPIC_TIMEOUT:30000}

# Google Gemini Configuration
ai.google.api-key=${AI_GOOGLE_API_KEY:YOUR_GOOGLE_API_KEY_HERE}
ai.google.model=${AI_GOOGLE_MODEL:gemini-pro}
ai.google.max-tokens=${AI_GOOGLE_MAX_TOKENS:4000}
ai.google.temperature=${AI_GOOGLE_TEMPERATURE:0.7}
ai.google.timeout=${AI_GOOGLE_TIMEOUT:30000}

# Azure OpenAI Configuration
ai.azure.openai.endpoint=${AI_AZURE_OPENAI_ENDPOINT:YOUR_AZURE_ENDPOINT_HERE}
ai.azure.openai.api-key=${AI_AZURE_OPENAI_API_KEY:YOUR_AZURE_API_KEY_HERE}
ai.azure.openai.model=${AI_AZURE_OPENAI_MODEL:gpt-4}
ai.azure.openai.max-tokens=${AI_AZURE_OPENAI_MAX_TOKENS:4000}
ai.azure.openai.temperature=${AI_AZURE_OPENAI_TEMPERATURE:0.7}
ai.azure.openai.timeout=${AI_AZURE_OPENAI_TIMEOUT:30000}

# Hugging Face Configuration
ai.huggingface.api-key=${AI_HUGGINGFACE_API_KEY:YOUR_HUGGINGFACE_API_KEY_HERE}
ai.huggingface.model=${AI_HUGGINGFACE_MODEL:microsoft/DialoGPT-medium}
ai.huggingface.max-tokens=${AI_HUGGINGFACE_MAX_TOKENS:4000}
ai.huggingface.temperature=${AI_HUGGINGFACE_TEMPERATURE:0.7}
ai.huggingface.timeout=${AI_HUGGINGFACE_TIMEOUT:30000}

# Local AI Configuration (Ollama, etc.)
ai.local.endpoint=${AI_LOCAL_ENDPOINT:YOUR_LOCAL_AI_ENDPOINT_HERE}
ai.local.model=${AI_LOCAL_MODEL:llama2}
ai.local.max-tokens=${AI_LOCAL_MAX_TOKENS:4000}
ai.local.temperature=${AI_LOCAL_TEMPERATURE:0.7}
ai.local.timeout=${AI_LOCAL_TIMEOUT:30000}

# Default AI Provider
ai.default.provider=${AI_DEFAULT_PROVIDER:openai}
ai.default.model=${AI_DEFAULT_MODEL:gpt-4o-mini}

# Twilio WhatsApp Configuration (Testing)
twilio.account.sid=${TWILIO_ACCOUNT_SID:YOUR_TWILIO_ACCOUNT_SID_HERE}
twilio.auth.token=${TWILIO_AUTH_TOKEN:YOUR_TWILIO_AUTH_TOKEN_HERE}
twilio.whatsapp.from=whatsapp:+14155238886
twilio.whatsapp.webhook.url=${TWILIO_WHATSAPP_WEBHOOK_URL:http://your-testing-server:8080/api/twilio/webhook}
twilio.whatsapp.enabled=${TWILIO_WHATSAPP_ENABLED:true}
twilio.whatsapp.retry.attempts=${TWILIO_WHATSAPP_RETRY_ATTEMPTS:3}
twilio.whatsapp.retry.delay=${TWILIO_WHATSAPP_RETRY_DELAY:5000}

# Email Configuration (Testing)
spring.mail.host=${SMTP_HOST:smtp.gmail.com}
spring.mail.port=${SMTP_PORT:587}
spring.mail.username=${SMTP_USERNAME:your_testing_email@gmail.com}
spring.mail.password=${SMTP_PASSWORD:your_app_password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.from=${SMTP_FROM:noreply@schoolmanagement.test}

# Testing Specific Configuration
testing.mode=${TESTING_MODE:true}
testing.data.enabled=${TESTING_DATA_ENABLED:true}
testing.ai.enabled=${TESTING_AI_ENABLED:true}
testing.email.enabled=${TESTING_EMAIL_ENABLED:false}
testing.sms.enabled=${TESTING_SMS_ENABLED:false}

# Security Configuration (Testing - Relaxed)
security.require.ssl=${SECURITY_REQUIRE_SSL:false}
security.headers.enabled=${SECURITY_HEADERS_ENABLED:true}

# Performance Configuration (Testing)
performance.connection.pool.max.size=${CONNECTION_POOL_MAX_SIZE:10}
performance.connection.pool.min.idle=${CONNECTION_POOL_MIN_IDLE:2}
performance.connection.timeout=${CONNECTION_TIMEOUT:30000}
performance.idle.timeout=${IDLE_TIMEOUT:600000}
